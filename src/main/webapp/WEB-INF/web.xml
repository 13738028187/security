<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance
        http://www.springmodules.org/schema/cache/springmodules-cache.xsd
        http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd "
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
        					http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0" metadata-complete="false" id="WebApp_1500280313366">
        
	<!-- Spring配置文件开始  -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-config.xml</param-value>
    </context-param>

    <!-- log4j配置文件 -->
    <!-- <context-param>  
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>  
	</context-param> -->

    <!-- 设置servlet编码开始 -->
    <filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    <!-- 设置servlet编码结束 -->

    <!-- shiro 安全过滤器 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
           <!--  该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由servlet container管理 -->
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <async-supported>true</async-supported>
    </filter>
    
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	 <!-- 配置log4j监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
    <!-- 读取 spring 上下文监听器 -->
 	<listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

 	<!-- 防止Spring内存溢出监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener> 
	
 	 <listener>
		<listener-class>com.hzdy.hardware.MonitoringListener</listener-class>
	</listener> 
	<!--激活Tomcat的defaultServlet来处理静态文件 不让静态文件走 springMVC,效率最高 -->
    <servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>/resources/sys/**</url-pattern>
	    <url-pattern>/page/**</url-pattern>
	</servlet-mapping>
	
	<!-- springmvc 控制器 -->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>  
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
	<!-- 首页 -->
	<welcome-file-list>  
        <welcome-file>login.html</welcome-file>  
    </welcome-file-list>
	
	<!-- 出错页面定义 -->  
	<error-page>  
	    <exception-type>java.lang.Throwable</exception-type>  
	    <location>/page/error/error500.html</location>  
	</error-page>  
	<error-page>  
	    <error-code>500</error-code>  
	    <location>/page/error/error500.html</location>  
	</error-page>  
	<error-page>  
	    <error-code>404</error-code>  
	    <location>/page/error/error404.html</location>  
	</error-page>  
	
</web-app>
